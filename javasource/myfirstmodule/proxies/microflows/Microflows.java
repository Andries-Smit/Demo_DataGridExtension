// This file was generated by Mendix Business Modeler 5.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the Microflows for the MyFirstModule module

	public static boolean bCo_SetInitOrder(IContext context, myfirstmodule.proxies.Person _person)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (Boolean)Core.execute(context, "MyFirstModule.BCo_SetInitOrder", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static java.util.List<myfirstmodule.proxies.Person_NP> dS_Persons_NonPersistant(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			java.util.List<IMendixObject> objs = Core.execute(context, "MyFirstModule.DS_Persons_NonPersistant", params);
			java.util.List<myfirstmodule.proxies.Person_NP> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<myfirstmodule.proxies.Person_NP>();
				for (IMendixObject obj : objs)
					result.add(myfirstmodule.proxies.Person_NP.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_AllPages(IContext context, java.util.List<system.proxies.UserRole> _userRoleList)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			java.util.ArrayList<IMendixObject> listparam_userRoleList = null;
			if (_userRoleList != null)
			{
				listparam_userRoleList = new java.util.ArrayList<IMendixObject>();
				for (system.proxies.UserRole obj : _userRoleList)
					listparam_userRoleList.add(obj.getMendixObject());
			}
			params.put("UserRoleList", listparam_userRoleList);
			Core.execute(context, "MyFirstModule.IVK_AllPages", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_DeletePerson(IContext context, myfirstmodule.proxies.Person _person)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "MyFirstModule.IVK_DeletePerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_DeletePersons(IContext context, java.util.List<myfirstmodule.proxies.Person> _personList)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			java.util.ArrayList<IMendixObject> listparam_personList = null;
			if (_personList != null)
			{
				listparam_personList = new java.util.ArrayList<IMendixObject>();
				for (myfirstmodule.proxies.Person obj : _personList)
					listparam_personList.add(obj.getMendixObject());
			}
			params.put("PersonList", listparam_personList);
			Core.execute(context, "MyFirstModule.IVK_DeletePersons", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_MoveDown(IContext context, myfirstmodule.proxies.Person _person)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "MyFirstModule.IVK_MoveDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_MoveUp(IContext context, myfirstmodule.proxies.Person _person)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "MyFirstModule.IVK_MoveUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static boolean iVK_NextSelection(IContext context, myfirstmodule.proxies.Person _person)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (Boolean)Core.execute(context, "MyFirstModule.IVK_NextSelection", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_NoParameter(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "MyFirstModule.IVK_NoParameter", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void iVK_OnClick(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "MyFirstModule.IVK_OnClick", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static boolean iVK_PreviousSelection(IContext context, myfirstmodule.proxies.Person _person)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			return (Boolean)Core.execute(context, "MyFirstModule.IVK_PreviousSelection", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void open_FirstUser(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "MyFirstModule.Open_FirstUser", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void opn_EditPerson(IContext context, myfirstmodule.proxies.Person _person)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("Person", _person == null ? null : _person.getMendixObject());
			Core.execute(context, "MyFirstModule.Opn_EditPerson", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void param(IContext context, system.proxies.UserRole _userRole)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("UserRole", _userRole == null ? null : _userRole.getMendixObject());
			Core.execute(context, "MyFirstModule.Param", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}